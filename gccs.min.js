#!/usr/bin/env node
(function(r,g,e){function h(a,d){var c={};a&&"object"===typeof a&&!m(a)&&(c=a,a=c.js_code);if(m(a))return u(a,function(a,b){if(a)return d(a);c.js_code=b;h(c,d)});Buffer.isBuffer(a)&&(a=a.toString(r));var v=a.match(/^#!.{3,}/);c.js_code=a;var b=Object.assign({warning_level:"QUIET",compilation_level:"SIMPLE_OPTIMIZATIONS"},c,{output_info:"compiled_code",output_format:"text"}),e="https"in b&&!b.https?{mod:y,port:80}:{mod:z,port:443},k=e.mod;e=e.port;delete b.https;b=A.stringify(b);k=k.request({hostname:"closure-compiler.appspot.com",
port:e,path:"/compile",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":Buffer.byteLength(b)}},function(a){u(a,function(b,c){c&&(c=c.toString(r));v&&(c=v[0]+"\n"+c);d(b,c,a)})});k.on("error",d);k.write(b);k.end();return k}function w(a,d,b){b||"function"!==typeof d||(b=d,d=void 0);a=a!==g?m(a)?a:x.createReadStream(a):e.stdin;if(d){if("string"===typeof d||m(d)){var c=d;d=void 0}else d.out_file&&(c=d.out_file,delete d.out_file);c&&c===g&&(c=e.stdout)}return h(Object.assign({},
d,{js_code:a}),function(a,d){if(a)return b(a);c?(m(c)||(c=x.createWriteStream(c)),c.write(d,r,function(a){b(a,d)}),c._isStdio||c.end()):b(a,d)})}function t(a){var b=p.basename(e.argv[1],".js");b="Usage:\n    "+b+" --help\n        or\n    "+b+' [OPTIONS] [--] [ <in_file> [ <out_file> ] ]\n\n    If <out_file> is omitted, out_file = in_file.min.js\n    If <in_file> == "-", stdin is used (<out_file> defaults to "-").\n    If <out_file> == "-", stdout is used.\n    If <in_file> and <out_file> are both omitted, they both default to "-".\n\n    OPTIONS:\n        --https              true | false\n        --compilation_level  WHITESPACE_ONLY | SIMPLE_OPTIMIZATIONS | ADVANCED_OPTIMIZATIONS\n        --formatting         pretty_print,print_input_delimiter\n        ...   (anything that Closure Compiler service accepts)\n';
if(a)a.write(b);else return b}function u(a,b){var c=[];a.on("data",function(a){c.push(a)});a.on("end",function(){b(null,c=Buffer.concat(c),a)});a.on("error",b);return a}function B(a){if("string"===typeof a)try{return JSON.parse(a)}catch(d){}return a}function m(a){return a&&"object"===typeof a&&"function"===typeof a.pipe}var y=require("http"),z=require("https"),x=require("fs"),p=require("path"),A=require("querystring");h.VERSION="1.3.2";if(module.parent)h.file=w,h.cli_usage=t,module.exports=h;else{for(var l=
{},q=e.argv,n=2,b;(b=q[n])&&"--"==b.slice(0,2);){++n;if("--"===b)break;b=b.slice(2);switch(b){case "help":t(e.stdout);e.exit(0);break;default:l[b]=B(q[n++])}}b=q[n]||l.in_file;var f=q[n+1]||l.out_file;b&&b!==g?f||(f=p.join(p.dirname(b),p.basename(b,".js")+".min.js")):(b=g,f||(f=g));l.out_file=f;delete l.in_file;w(b,l,function(a){a&&(console.error(a),t(e.stderr),e.exit(2));f!=g&&console.log("\u001b[32m%s\u001b[0m",f)})}})("utf8","-",process);
